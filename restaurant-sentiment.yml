apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-depl
spec:
  selector:
    matchLabels:
      app: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: model-service
          image: ghcr.io/remla23-team2/model-service:1.2.0
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: shared-code
              mountPath: /root/src
        - name: model-training
          image: busybox
          volumeMounts:
            - name: shared-code
              mountPath: /root/code
          command: ['/bin/bash']
          args: ['-c', 'cp -R /root/src /root/code']
      volumes:
        - name: shared-code
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend-serv
spec:
  selector:
    app: backend
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-depl
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: app
        image: ghcr.io/remla23-team2/app:1.2.0
        ports:
        - containerPort: 3000
        env:
          - name: MODEL_HOST
            valueFrom:
              configMapKeyRef:
                name: my-config
                key: model.host
---
apiVersion: v1
kind: Service
metadata:
  name: app-serv
spec:
  selector:
    app: app
  ports:
    - name: http
      port: 3000
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
spec:
  defaultBackend:
    service:
      name: app-serv
      port:
        number: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
data:
  model.host: "http://backend-serv:8080"