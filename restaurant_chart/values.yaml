app:
  deployment:
    label: app
  service:
    name: app-serv
  port: 3000
  targetPort: 80
  path: "/"
  version:
    v1: 3.1.0
    v2: 3.0.2
  replicas: 1

gateway:
  deployment: 
    label: gateway
  service: 
    name: gateway-serv
    label: gateway-label
  port: 3000
  targetport: 3000
  path: "/api"
  version: 1.0.0
  replicas: 1

modelService:
  deployment:
    label: model-service
  service:
    name: model-service-serv
    label: model-service-label
  replicas: 1
  port: 80
  targetPort: 8080
  version: 2.2.0
  path: "/modelservice"

kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      additionalAlertManagerConfigs:
        - static_configs:
          - targets: 
            - "prom-alertmanager:9093"
  additionalPrometheusRulesMap:
    rule-name:
      groups:
        - name: ruleset_1
          rules:
            - alert: LowModelAccuracy
              expr: model_accuracy < 0.5 
              for: 1m
              labels:
                severity: warning
              annotations:
                summary: BadModel
                description: "Very low model accuracy"
  alertmanager:
    config:
      global:
        smtp_smarthost: 'smtp.office365.com:587'
        smtp_from: 'remla23-team02@outlook.com'
        smtp_auth_username: 'remla23-team02@outlook.com'
        smtp_auth_password: 'abcdefg2023'
      route:
        group_by: ['job']
        group_wait: 30s
        group_interval: 5m
        # A kind of rate limit (for the alerts which have been resolved but are fired again)
        repeat_interval: 12h
        receiver: 'team-emails'
        routes:
        - match:
            alertname: BadModel
          receiver: 'team-emails'
      receivers:
      - name: 'team-emails'
        email_configs:
        - to: 'remla23-team02@outlook.com'
          send_resolved: true